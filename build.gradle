apply plugin: "java"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

// find home directory
ext.userHome = System.getProperty("user.home")

// find JPF's site.properties
Properties siteProperties = new Properties()
try {
    FileInputStream file = new FileInputStream("${userHome}/.jpf/site.properties")
    siteProperties.load(file)
    file.close()
} catch (FileNotFoundException ignored) {
    throw new GradleException("Please install jpf-core first and add the property 'jpf-core' to ${userHome}/.jpf pointing to the jpf-core installation")
}

// find jpf-core
ext.jpfCoreExists = false
ext.jpfCore = siteProperties.getProperty("jpf-core")
if (jpfCore != null) {
    jpfCore = jpfCore.replace('${user.home}', userHome)
    jpfCoreExists = new File(jpfCore).exists()
}
if (!jpfCoreExists) {
    throw new GradleException("${userHome}/.jpf/site.properties points to the jpf-core installation at ${jpfCore} but that directory does not exist")
}

javadoc {
    configure( options ) {
        tags(
                'implNote:a:Implementation Note:'
        )
    }
}

dependencies {
    implementation files("${jpfCore}/build/jpf.jar")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
}

apply from: "gradle/source-sets.gradle"

task compile {
    group = "jpf-partial-transition-system-listener build"
    description = "Compiles all jpf-partial-transition-system-listener sources."

    dependsOn compileTestJava
}

test {
    useJUnitPlatform()
}

defaultTasks "buildJars"